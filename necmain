if not game.Loaded then game.Loaded:Wait() end
makefolder("notenoughcommands")
shared.Debugging = false
path = "notenoughcommands\\"
Commands = loadstring(game:HttpGet("https://raw.githubusercontent.com/theballsscratcher/theballsscratcher/nec/necmds"))()
script = game:GetService("CoreGui").NotEnoughCommands.DummyMain
UI = script.Parent
DescriptionLabel = UI.Description
Main = UI.Main
CommandLabel = Main.Commands
Notification = Main.Notification
Welcome =  Main.Welcome
Tab1 = Main.Tab1
writefile(path.."save.xyz", [[
local save = {}
save.Color1 = Color3.new(]]..tostring(Main.BackgroundColor3)..[[)
save.Color2 = Color3.new(]]..tostring(Main.UIStroke.Color)..[[)
return save]]
)
Players = game:GetService("Players")
Player = Players.LocalPlayer
TweenService = game:GetService("TweenService")
MatchInfo = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out, 0, false, 0)
ToolInfo = TweenInfo.new(1, Enum.EasingStyle.Back, Enum.EasingDirection.Out, 0, false, 0)
CMDSInfo = TweenInfo.new(1.7, Enum.EasingStyle.Back, Enum.EasingDirection.Out, 0, false, 0)
MatchUi = Main.Match
SettingsOpen = false
addedaddons = {}
CommandsOpen = false
Goals = {
	OutGoal = {Position = UDim2.new(0.5, 235,1, -30)},
	InGoal = {Position = UDim2.new(0.5, -21,1, -30)},
	NotifyOutGoal = {Position = UDim2.new(0.5, -235,1, -60)},
	NotifyInGoal = {Position = UDim2.new(0.5, -235,1, -30)},
	SettingsOutGoal = {Position = UDim2.new(0.5, -381,1, -30)},
	SettingsInGoal = {Position = UDim2.new(0.5, -235,1, -30)},
	CommandsInGoal = {Position = UDim2.new(0.5, -158,0.5, 200)},
	CommandsOutGoal = {Position = UDim2.new(0.5, -158,0.5, -300)}
}
Out = TweenService:Create(MatchUi, MatchInfo, Goals.OutGoal)
In = TweenService:Create(MatchUi, MatchInfo, Goals.InGoal)
NotifyOut = TweenService:Create(Notification, MatchInfo, Goals.NotifyOutGoal)
NotifyIn = TweenService:Create(Notification, MatchInfo, Goals.NotifyInGoal)
SettingsOut = TweenService:Create(Tab1, ToolInfo, Goals.SettingsOutGoal)
SettingsIn = TweenService:Create(Tab1, ToolInfo, Goals.SettingsInGoal)
CommandsIn = TweenService:Create(CommandLabel, CMDSInfo, Goals.CommandsInGoal)
CommandsOut = TweenService:Create(CommandLabel, CMDSInfo, Goals.CommandsOutGoal)
UiS = game:GetService("UserInputService")
CommandBox = Main.CommandBox
Welcome.Text = "Welcome, <b>"..Player.Name.."</b>."
CurrentPart = nil
SelectionBox = Instance.new("SelectionBox", workspace)
RunService = game:GetService("RunService")
SelectedParts = {}
Connections = {}
FloatPart = Instance.new("Part")
FloatPart.Anchored = true
FloatPart.Size = Vector3.new(4, 1, 4)
FloatPart.Transparency = 1
FloatPart.Parent = workspace
function Notify(Text:string, Duration:number)
	Notification.Text = Text
	print(Notification.Text, Text)
	NotifyOut:Play()
	task.wait(Duration)
	Notification.Text = ""
	NotifyIn:Play()
end
function update()
	for _, Command in ipairs(Commands) do
		if not CommandLabel:FindFirstChild(Command.Name) then
			local Button = CommandLabel.Template:Clone()
			Button.Visible = true
			Button.Name = Command.Name
			Button.Text = Command.Name
			Button.MouseEnter:Connect(function()
				DescriptionLabel.Visible = true
				DescriptionLabel.Text = Command.Description or "<DEFAULT DESCRIPTION>"
			end)
			Button.MouseLeave:Connect(function()
				DescriptionLabel.Visible = false
			end)
			Button.Activated:Connect(function()
				CommandBox.Text = Button.Name
			end)
			Button.Parent = CommandLabel
		end
	end
end
function FindIndex(Name)
	for Index, Val in pairs(Commands) do
		if Val.Name == Name or Val.Aliases[Name] then
            print(Val, Name, Index)
			return Index
		end
	end
end
function FindCMD(Name:string)
	for _, Value in ipairs(Commands) do
		if shared.Debugging then print(Value, Value.Name, Value.Aliases, Value.Function) end
		if Value.Name == Name:lower() or table.find(Value.Aliases, Name:lower()) then
			return Value.Function
		end
	end
end
function Match(str:string)
	for _, Value in pairs(Commands) do
		if Value and Value.Name:find(str) or Value.Aliases[str] then
			return Value
		end
	end
end
function getfile(Name:string)
    local file;
    if isfile(path..Name..".xyz") then
        file = loadfile(path..Name..".xyz")
    else
		file = loadfile(Name..".xyz")
		writefile(path..Name, readfile(Name..".xyz"))
		delfile(Name..".xyz")
	end
    return file
end
function AddAddon(Name)
	if not table.find(addedaddons, Name) and name ~= "addonapi" then
		table.insert(Commands, getfile(Name)())
		table.insert(addedaddons, Name)
		update()
	end
end
function RemoveAddon(Name)
	if table.find(addedaddons, Name) then
		print(FindIndex(Name), CommandLabel:FindFirstChild(Name))
		CommandLabel:FindFirstChild(getfile(Name)().Name):Destroy()
		table.remove(Commands, FindIndex(Name))
		table.remove(addedaddons, table.find(addedaddons, Name))
	end
end
function StringToRGB(String)
	local split = String:split(",")
	if #split < 3 or #split > 3 then return end
	print(String, Color3.fromRGB(split[1], split[2], split[3]))
	return Color3.fromRGB(split[1], split[2], split[3])
end
function NewTheme(color1, color2)
	for _, BaseUi in ipairs(UI:GetDescendants()) do
			if BaseUi:IsA("Frame") then
				BaseUi.BackgroundColor3 = color1
			elseif BaseUi:IsA("TextLabel") or BaseUi:IsA("TextButton") or BaseUi:IsA("TextBox") then
				BaseUi.TextColor3 = color2
				BaseUi.TextStrokeColor3 = color1
				BaseUi.BackgroundColor3 = color1
			elseif BaseUi:IsA("UIStroke") then
				BaseUi.Color = color2
		end
	end
end
if isfile(path.."save.xyz") then
	local file = loadfile(path.."save.xyz")()
	NewTheme(file.Color1, file.Color2)
end
Mouse = Player:GetMouse()
update()

local Connection; Connection = CommandBox.FocusLost:Connect(function(Enter)
	if Enter and #CommandBox.Text:split(" ") > 0 then
		local Split = CommandBox.Text:split(" ")
		local Command = FindCMD(Split[1])
		if shared.Debuggin then print(Command, Split) end
		if Command then
			In:Play()
			CommandBox.Text = ""
			Command(Player, unpack(Split, 2))
		end
		--Connection:Disconnect()
	end
end)

local Connection1; Connection1 = CommandBox:GetPropertyChangedSignal("Text"):Connect(function()
	if #CommandBox.Text:split("") > 0 and Match(CommandBox.Text)  then
		Out:Play()
		MatchUi.Text = Match(CommandBox.Text).Name
	elseif #CommandBox.Text:split("") <= 1 then
		In:Play()
		CommandBox.Text = ""
	end
end)

local Connection2; Connection2 = UiS.InputBegan:Connect(function(Input, Chatting)
	if Chatting then return end
	if Input.KeyCode == Enum.KeyCode.Semicolon then
		CommandBox:CaptureFocus()
	elseif Input.UserInputType == Enum.UserInputType.MouseButton3 and Mouse.Target then
		CurrentPart = Mouse.Target
		if not table.find(SelectedParts, Mouse.Target) then
			table.insert(SelectedParts, Mouse.Target)
		end
		SelectionBox.Adornee = Mouse.Target
	elseif Input.KeyCode == Enum.KeyCode.F2 then
		if not SettingsOpen  then
			SettingsOpen = true
			SettingsOut:Play()
		else
			SettingsOpen = false
			SettingsIn:Play()
		end
	elseif Input.KeyCode == Enum.KeyCode.Delete then
		if not CommandsOpen then
			CommandsOpen = true
			CommandsOut:Play()
		else
			CommandsOpen = false
			CommandsIn:Play()
		end
	end
end)

local Connection3; Connection3 = MatchUi.Activated:Connect(function()
	CommandBox.Text = MatchUi.Text
end)

Player.Backpack.ChildAdded:Connect(function(Child)
	if Child:IsA("Tool") then
		TweenService:Create(Main, ToolInfo, {Position = UDim2.new(0.5, -235,0.803, -30)}):Play()
		Goals.OutGoal = {Position = UDim2.new(0.5, 235,0.803, -30)}
		Goals.InGoal ={Position = UDim2.new(0.5, -21,0.803, -30)}
		Goals.NotifyOutGoal = {Position = UDim2.new(0.5, -235,0.803, -60)}
		Goals.NotifyInGoal = {Position = UDim2.new(0.5, -235,0.803, -30)}
		Goals.SettingsOutGoal = {Position = UDim2.new(0.5, -381,1, -30)}
		Goals.SettingsInGoal = {Position = UDim2.new(0.5, -235,1, -30)}
	end
end)

Player.Backpack.ChildRemoved:Connect(function(Child)
	if Child:IsA("Tool") and not Player.Character:FindFirstChildWhichIsA("Tool") then
		TweenService:Create(Main, ToolInfo, {Position = UDim2.new(0.5, -235,1, -30)}):Play()
		Goals.OutGoal = {Position = UDim2.new(0.5, 235,1, -30)}
		Goals.InGoal = {Position = UDim2.new(0.5, -21,1, -30)}
		Goals.NotifyOutGoal = {Position = UDim2.new(0.5, -235,1, -60)}
		Goals.NotifyInGoal = {Position = UDim2.new(0.5, -235,1, -30)}
		Goals.SettingsOutGoal = {Position = UDim2.new(0.5, -381,1, -30)}
		Goals.SettingsInGoal = {Position = UDim2.new(0.5, -235,1, -30)}
	end
end)

RunService.RenderStepped:Connect(function()
	DescriptionLabel.Position = UDim2.new(0, Mouse.X + 10, 0, Mouse.Y + 10)
end)
UI.Destroying:Connect(function()
	writefile(path.."save.xyz", [[
	local save = {}
	save.Color1 = Color3.new(]]..tostring(Main.BackgroundColor3)..[[)
	save.Color2 = Color3.new(]]..tostring(Main.UIStroke.Color)..[[)
	return save]]
	)
end)
